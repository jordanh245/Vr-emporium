{"ast":null,"code":"var _jsxFileName = \"/Users/jordanharris/Desktop/Vr-emporium/Client/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const history = useHistory(); //   CHANGE HANDLE TO THIS\n  // const handleChange = (e) => {\n  // \tsetLoginInfo ({\n  // \t\t...loginInfo,\n  // \t\t[e.target.name]: e.target.value\n  // \t})\n  // }\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const login = await fetch('http://localhost:3000/login', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(loginInfo)\n    }).then(response => response.json()).then(result => {\n      // console.log(result)\n      if (result.success === true) {\n        const token = result.token;\n        localStorage.setItem(\"jsonwebtoken\", token);\n        props.onLoggedIn();\n        props.history.push(\"/account\");\n      }\n    }); // window.location.reload(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"email\",\n      onChange: e => setLoginInfo({ ...loginInfo,\n        [e.target.name]: e.target.value\n      }),\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"password\",\n      onChange: e => setLoginInfo({ ...loginInfo,\n        [e.target.name]: e.target.value\n      }),\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleLogin(e),\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/register\",\n      children: \"New here? Click here to register!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"0g6f4LGzvNW7b8agq8GHKEtdFi8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLoggedIn: () => dispatch({\n      type: \"ON_LOGGED_IN\"\n    })\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jordanharris/Desktop/Vr-emporium/Client/src/components/Login.js"],"names":["React","useState","connect","useHistory","Login","props","loginInfo","setLoginInfo","email","password","history","handleLogin","e","preventDefault","login","fetch","method","mode","headers","body","JSON","stringify","then","response","json","result","success","token","localStorage","setItem","onLoggedIn","push","target","name","value","mapDispatchToProps","dispatch","type"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;AAGC,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC;AAC1CO,IAAAA,KAAK,EAAC,EADoC;AAE1CC,IAAAA,QAAQ,EAAC;AAFiC,GAAD,CAA1C;AAMA,QAAMC,OAAO,GAAGP,UAAU,EAA1B,CARsB,CASvB;AACC;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMQ,WAAW,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,IAAI,EAAE,MAFkD;AAGxDC,MAAAA,OAAO,EAAE;AACR,wBAAe;AADP,OAH+C;AAOxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,SAAf;AAPkD,KAAhC,CAAL,CAQhBgB,IARgB,CAQXC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARD,EASnBF,IATmB,CASbG,MAAD,IAAY;AACjB;AACA,UAAIA,MAAM,CAACC,OAAP,KAAmB,IAAvB,EAA6B;AAC5B,cAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,KAArC;AACAtB,QAAAA,KAAK,CAACyB,UAAN;AACAzB,QAAAA,KAAK,CAACK,OAAN,CAAcqB,IAAd,CAAmB,UAAnB;AACA;AACD,KAjBmB,CAApB,CAFgC,CAoBhC;AACA,GArBD;;AA0BA,sBACC;AAAA,4BAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,WAAW,EAAC,OAAhC;AACS,MAAA,QAAQ,EAAGnB,CAAD,IAAOL,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,SAACM,CAAC,CAACoB,MAAF,CAASC,IAAV,GAAgBrB,CAAC,CAACoB,MAAF,CAASE;AAAxC,OAAD,CADtC;AACwF,MAAA,IAAI,EAAC;AAD7F;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,WAAW,EAAC,UAAhC;AACS,MAAA,QAAQ,EAAGtB,CAAD,IAAOL,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,SAACM,CAAC,CAACoB,MAAF,CAASC,IAAV,GAAgBrB,CAAC,CAACoB,MAAF,CAASE;AAAxC,OAAD,CADtC;AACwF,MAAA,IAAI,EAAC;AAD7F;AAAA;AAAA;AAAA;AAAA,YAJD,eAMC;AAAQ,MAAA,OAAO,EAAGtB,CAAD,IAAKD,WAAW,CAACC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAND,eAOC;AAAG,MAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWC;;GAvDQR,K;UAQOD,U;;;KARPC,K;;AAwDV,MAAM+B,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACNN,IAAAA,UAAU,EAAE,MAAMM,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD;AADpB,GAAP;AAGA,CAJD;;AAMA,eAAenC,OAAO,CAAC,IAAD,EAAOiC,kBAAP,CAAP,CAAkC/B,KAAlC,CAAf","sourcesContent":["\n\nimport React, { useState } from 'react'\nimport {connect } from \"react-redux\"\nimport {useHistory} from \"react-router-dom\"\n\n\n function Login(props) {\n\t\n\tconst [loginInfo, setLoginInfo] = useState({\n\t\temail:\"\",\n\t\tpassword:\"\",\n\n\t})\n\n\tconst history = useHistory()\n//   CHANGE HANDLE TO THIS\n\t// const handleChange = (e) => {\n\t// \tsetLoginInfo ({\n\t// \t\t...loginInfo,\n\t// \t\t[e.target.name]: e.target.value\n\t// \t})\n\t// }\n\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault();\n\t\tconst login = await fetch('http://localhost:3000/login', {\n\t\t\tmethod: \"POST\",\n\t\t\tmode: \"cors\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\":\"application/json\",\n\t\t\t\t\n\t\t\t},\n\t\t\tbody: JSON.stringify(loginInfo)\n\t\t}) .then(response => response.json())\n\t\t.then((result) => {\n\t\t\t// console.log(result)\n\t\t\tif (result.success === true) {\n\t\t\t\tconst token = result.token\n\t\t\t\tlocalStorage.setItem(\"jsonwebtoken\", token);\n\t\t\t\tprops.onLoggedIn();\n\t\t\t\tprops.history.push(\"/account\")\n\t\t\t}\n\t\t})\n\t\t// window.location.reload(false);\n\t};\n\n\n\n\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t\t<input type=\"text\"  placeholder=\"email\" \n            onChange={(e) => setLoginInfo({...loginInfo, [e.target.name]:e.target.value})} name=\"email\"/>\n\t\t\t<input type=\"text\"  placeholder=\"password\" \n            onChange={(e) => setLoginInfo({...loginInfo, [e.target.name]:e.target.value})} name=\"password\"/>\n\t\t\t<button onClick={(e)=>handleLogin(e)}>SUBMIT</button>\n\t\t\t<a href=\"/register\">New here? Click here to register!</a>\n\t\t</div>\n\t)\n\t}\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonLoggedIn: () => dispatch({type: \"ON_LOGGED_IN\"})\n\t};\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n\t"]},"metadata":{},"sourceType":"module"}