{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";var _excluded=[\"initMapStateToProps\",\"initMapDispatchToProps\",\"initMergeProps\"];import verifySubselectors from'./verifySubselectors';export function impureFinalPropsSelectorFactory(mapStateToProps,mapDispatchToProps,mergeProps,dispatch){return function impureFinalPropsSelector(state,ownProps){return mergeProps(mapStateToProps(state,ownProps),mapDispatchToProps(dispatch,ownProps),ownProps);};}export function pureFinalPropsSelectorFactory(mapStateToProps,mapDispatchToProps,mergeProps,dispatch,_ref){var areStatesEqual=_ref.areStatesEqual,areOwnPropsEqual=_ref.areOwnPropsEqual,areStatePropsEqual=_ref.areStatePropsEqual;var hasRunAtLeastOnce=false;var state;var ownProps;var stateProps;var dispatchProps;var mergedProps;function handleFirstCall(firstState,firstOwnProps){state=firstState;ownProps=firstOwnProps;stateProps=mapStateToProps(state,ownProps);dispatchProps=mapDispatchToProps(dispatch,ownProps);mergedProps=mergeProps(stateProps,dispatchProps,ownProps);hasRunAtLeastOnce=true;return mergedProps;}function handleNewPropsAndNewState(){stateProps=mapStateToProps(state,ownProps);if(mapDispatchToProps.dependsOnOwnProps)dispatchProps=mapDispatchToProps(dispatch,ownProps);mergedProps=mergeProps(stateProps,dispatchProps,ownProps);return mergedProps;}function handleNewProps(){if(mapStateToProps.dependsOnOwnProps)stateProps=mapStateToProps(state,ownProps);if(mapDispatchToProps.dependsOnOwnProps)dispatchProps=mapDispatchToProps(dispatch,ownProps);mergedProps=mergeProps(stateProps,dispatchProps,ownProps);return mergedProps;}function handleNewState(){var nextStateProps=mapStateToProps(state,ownProps);var statePropsChanged=!areStatePropsEqual(nextStateProps,stateProps);stateProps=nextStateProps;if(statePropsChanged)mergedProps=mergeProps(stateProps,dispatchProps,ownProps);return mergedProps;}function handleSubsequentCalls(nextState,nextOwnProps){var propsChanged=!areOwnPropsEqual(nextOwnProps,ownProps);var stateChanged=!areStatesEqual(nextState,state);state=nextState;ownProps=nextOwnProps;if(propsChanged&&stateChanged)return handleNewPropsAndNewState();if(propsChanged)return handleNewProps();if(stateChanged)return handleNewState();return mergedProps;}return function pureFinalPropsSelector(nextState,nextOwnProps){return hasRunAtLeastOnce?handleSubsequentCalls(nextState,nextOwnProps):handleFirstCall(nextState,nextOwnProps);};}// TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\nexport default function finalPropsSelectorFactory(dispatch,_ref2){var initMapStateToProps=_ref2.initMapStateToProps,initMapDispatchToProps=_ref2.initMapDispatchToProps,initMergeProps=_ref2.initMergeProps,options=_objectWithoutPropertiesLoose(_ref2,_excluded);var mapStateToProps=initMapStateToProps(dispatch,options);var mapDispatchToProps=initMapDispatchToProps(dispatch,options);var mergeProps=initMergeProps(dispatch,options);if(process.env.NODE_ENV!=='production'){verifySubselectors(mapStateToProps,mapDispatchToProps,mergeProps,options.displayName);}var selectorFactory=options.pure?pureFinalPropsSelectorFactory:impureFinalPropsSelectorFactory;return selectorFactory(mapStateToProps,mapDispatchToProps,mergeProps,dispatch,options);}","map":{"version":3,"sources":["/Users/jordanharris/Desktop/Vr-emporium/Client/src/node_modules/react-redux/es/connect/selectorFactory.js"],"names":["_objectWithoutPropertiesLoose","_excluded","verifySubselectors","impureFinalPropsSelectorFactory","mapStateToProps","mapDispatchToProps","mergeProps","dispatch","impureFinalPropsSelector","state","ownProps","pureFinalPropsSelectorFactory","_ref","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","hasRunAtLeastOnce","stateProps","dispatchProps","mergedProps","handleFirstCall","firstState","firstOwnProps","handleNewPropsAndNewState","dependsOnOwnProps","handleNewProps","handleNewState","nextStateProps","statePropsChanged","handleSubsequentCalls","nextState","nextOwnProps","propsChanged","stateChanged","pureFinalPropsSelector","finalPropsSelectorFactory","_ref2","initMapStateToProps","initMapDispatchToProps","initMergeProps","options","process","env","NODE_ENV","displayName","selectorFactory","pure"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"initMapStateToProps\", \"initMapDispatchToProps\", \"initMergeProps\"];\nimport verifySubselectors from './verifySubselectors';\nexport function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\nexport function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n  var hasRunAtLeastOnce = false;\n  var state;\n  var ownProps;\n  var stateProps;\n  var dispatchProps;\n  var mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n} // TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nexport default function finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = _objectWithoutPropertiesLoose(_ref2, _excluded);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);\n  }\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}"]},"metadata":{},"sourceType":"module"}