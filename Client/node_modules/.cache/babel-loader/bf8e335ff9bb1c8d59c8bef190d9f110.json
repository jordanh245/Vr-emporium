{"ast":null,"code":"import{getBatch}from'./batch';// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\nfunction createListenerCollection(){var batch=getBatch();var first=null;var last=null;return{clear:function clear(){first=null;last=null;},notify:function notify(){batch(function(){var listener=first;while(listener){listener.callback();listener=listener.next;}});},get:function get(){var listeners=[];var listener=first;while(listener){listeners.push(listener);listener=listener.next;}return listeners;},subscribe:function subscribe(callback){var isSubscribed=true;var listener=last={callback:callback,next:null,prev:last};if(listener.prev){listener.prev.next=listener;}else{first=listener;}return function unsubscribe(){if(!isSubscribed||first===null)return;isSubscribed=false;if(listener.next){listener.next.prev=listener.prev;}else{last=listener.prev;}if(listener.prev){listener.prev.next=listener.next;}else{first=listener.next;}};}};}var nullListeners={notify:function notify(){},get:function get(){return[];}};export function createSubscription(store,parentSub){var unsubscribe;var listeners=nullListeners;function addNestedSub(listener){trySubscribe();return listeners.subscribe(listener);}function notifyNestedSubs(){listeners.notify();}function handleChangeWrapper(){if(subscription.onStateChange){subscription.onStateChange();}}function isSubscribed(){return Boolean(unsubscribe);}function trySubscribe(){if(!unsubscribe){unsubscribe=parentSub?parentSub.addNestedSub(handleChangeWrapper):store.subscribe(handleChangeWrapper);listeners=createListenerCollection();}}function tryUnsubscribe(){if(unsubscribe){unsubscribe();unsubscribe=undefined;listeners.clear();listeners=nullListeners;}}var subscription={addNestedSub:addNestedSub,notifyNestedSubs:notifyNestedSubs,handleChangeWrapper:handleChangeWrapper,isSubscribed:isSubscribed,trySubscribe:trySubscribe,tryUnsubscribe:tryUnsubscribe,getListeners:function getListeners(){return listeners;}};return subscription;}","map":{"version":3,"sources":["/Users/jordanharris/Desktop/Vr-emporium/Client/src/node_modules/react-redux/es/utils/Subscription.js"],"names":["getBatch","createListenerCollection","batch","first","last","clear","notify","listener","callback","next","get","listeners","push","subscribe","isSubscribed","prev","unsubscribe","nullListeners","createSubscription","store","parentSub","addNestedSub","trySubscribe","notifyNestedSubs","handleChangeWrapper","subscription","onStateChange","Boolean","tryUnsubscribe","undefined","getListeners"],"mappings":"AAAA,OAASA,QAAT,KAAyB,SAAzB,CAAoC;AACpC;AACA;AAEA,QAASC,CAAAA,wBAAT,EAAoC,CAClC,GAAIC,CAAAA,KAAK,CAAGF,QAAQ,EAApB,CACA,GAAIG,CAAAA,KAAK,CAAG,IAAZ,CACA,GAAIC,CAAAA,IAAI,CAAG,IAAX,CACA,MAAO,CACLC,KAAK,CAAE,QAASA,CAAAA,KAAT,EAAiB,CACtBF,KAAK,CAAG,IAAR,CACAC,IAAI,CAAG,IAAP,CACD,CAJI,CAKLE,MAAM,CAAE,QAASA,CAAAA,MAAT,EAAkB,CACxBJ,KAAK,CAAC,UAAY,CAChB,GAAIK,CAAAA,QAAQ,CAAGJ,KAAf,CAEA,MAAOI,QAAP,CAAiB,CACfA,QAAQ,CAACC,QAAT,GACAD,QAAQ,CAAGA,QAAQ,CAACE,IAApB,CACD,CACF,CAPI,CAAL,CAQD,CAdI,CAeLC,GAAG,CAAE,QAASA,CAAAA,GAAT,EAAe,CAClB,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIJ,CAAAA,QAAQ,CAAGJ,KAAf,CAEA,MAAOI,QAAP,CAAiB,CACfI,SAAS,CAACC,IAAV,CAAeL,QAAf,EACAA,QAAQ,CAAGA,QAAQ,CAACE,IAApB,CACD,CAED,MAAOE,CAAAA,SAAP,CACD,CAzBI,CA0BLE,SAAS,CAAE,QAASA,CAAAA,SAAT,CAAmBL,QAAnB,CAA6B,CACtC,GAAIM,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAIP,CAAAA,QAAQ,CAAGH,IAAI,CAAG,CACpBI,QAAQ,CAAEA,QADU,CAEpBC,IAAI,CAAE,IAFc,CAGpBM,IAAI,CAAEX,IAHc,CAAtB,CAMA,GAAIG,QAAQ,CAACQ,IAAb,CAAmB,CACjBR,QAAQ,CAACQ,IAAT,CAAcN,IAAd,CAAqBF,QAArB,CACD,CAFD,IAEO,CACLJ,KAAK,CAAGI,QAAR,CACD,CAED,MAAO,SAASS,CAAAA,WAAT,EAAuB,CAC5B,GAAI,CAACF,YAAD,EAAiBX,KAAK,GAAK,IAA/B,CAAqC,OACrCW,YAAY,CAAG,KAAf,CAEA,GAAIP,QAAQ,CAACE,IAAb,CAAmB,CACjBF,QAAQ,CAACE,IAAT,CAAcM,IAAd,CAAqBR,QAAQ,CAACQ,IAA9B,CACD,CAFD,IAEO,CACLX,IAAI,CAAGG,QAAQ,CAACQ,IAAhB,CACD,CAED,GAAIR,QAAQ,CAACQ,IAAb,CAAmB,CACjBR,QAAQ,CAACQ,IAAT,CAAcN,IAAd,CAAqBF,QAAQ,CAACE,IAA9B,CACD,CAFD,IAEO,CACLN,KAAK,CAAGI,QAAQ,CAACE,IAAjB,CACD,CACF,CAfD,CAgBD,CAxDI,CAAP,CA0DD,CAED,GAAIQ,CAAAA,aAAa,CAAG,CAClBX,MAAM,CAAE,QAASA,CAAAA,MAAT,EAAkB,CAAE,CADV,CAElBI,GAAG,CAAE,QAASA,CAAAA,GAAT,EAAe,CAClB,MAAO,EAAP,CACD,CAJiB,CAApB,CAMA,MAAO,SAASQ,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmCC,SAAnC,CAA8C,CACnD,GAAIJ,CAAAA,WAAJ,CACA,GAAIL,CAAAA,SAAS,CAAGM,aAAhB,CAEA,QAASI,CAAAA,YAAT,CAAsBd,QAAtB,CAAgC,CAC9Be,YAAY,GACZ,MAAOX,CAAAA,SAAS,CAACE,SAAV,CAAoBN,QAApB,CAAP,CACD,CAED,QAASgB,CAAAA,gBAAT,EAA4B,CAC1BZ,SAAS,CAACL,MAAV,GACD,CAED,QAASkB,CAAAA,mBAAT,EAA+B,CAC7B,GAAIC,YAAY,CAACC,aAAjB,CAAgC,CAC9BD,YAAY,CAACC,aAAb,GACD,CACF,CAED,QAASZ,CAAAA,YAAT,EAAwB,CACtB,MAAOa,CAAAA,OAAO,CAACX,WAAD,CAAd,CACD,CAED,QAASM,CAAAA,YAAT,EAAwB,CACtB,GAAI,CAACN,WAAL,CAAkB,CAChBA,WAAW,CAAGI,SAAS,CAAGA,SAAS,CAACC,YAAV,CAAuBG,mBAAvB,CAAH,CAAiDL,KAAK,CAACN,SAAN,CAAgBW,mBAAhB,CAAxE,CACAb,SAAS,CAAGV,wBAAwB,EAApC,CACD,CACF,CAED,QAAS2B,CAAAA,cAAT,EAA0B,CACxB,GAAIZ,WAAJ,CAAiB,CACfA,WAAW,GACXA,WAAW,CAAGa,SAAd,CACAlB,SAAS,CAACN,KAAV,GACAM,SAAS,CAAGM,aAAZ,CACD,CACF,CAED,GAAIQ,CAAAA,YAAY,CAAG,CACjBJ,YAAY,CAAEA,YADG,CAEjBE,gBAAgB,CAAEA,gBAFD,CAGjBC,mBAAmB,CAAEA,mBAHJ,CAIjBV,YAAY,CAAEA,YAJG,CAKjBQ,YAAY,CAAEA,YALG,CAMjBM,cAAc,CAAEA,cANC,CAOjBE,YAAY,CAAE,QAASA,CAAAA,YAAT,EAAwB,CACpC,MAAOnB,CAAAA,SAAP,CACD,CATgB,CAAnB,CAWA,MAAOc,CAAAA,YAAP,CACD","sourcesContent":["import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  var batch = getBatch();\n  var first = null;\n  var last = null;\n  return {\n    clear: function clear() {\n      first = null;\n      last = null;\n    },\n    notify: function notify() {\n      batch(function () {\n        var listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n    get: function get() {\n      var listeners = [];\n      var listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n    subscribe: function subscribe(callback) {\n      var isSubscribed = true;\n      var listener = last = {\n        callback: callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n  };\n}\n\nvar nullListeners = {\n  notify: function notify() {},\n  get: function get() {\n    return [];\n  }\n};\nexport function createSubscription(store, parentSub) {\n  var unsubscribe;\n  var listeners = nullListeners;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    return listeners.subscribe(listener);\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return Boolean(unsubscribe);\n  }\n\n  function trySubscribe() {\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    if (unsubscribe) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  var subscription = {\n    addNestedSub: addNestedSub,\n    notifyNestedSubs: notifyNestedSubs,\n    handleChangeWrapper: handleChangeWrapper,\n    isSubscribed: isSubscribed,\n    trySubscribe: trySubscribe,\n    tryUnsubscribe: tryUnsubscribe,\n    getListeners: function getListeners() {\n      return listeners;\n    }\n  };\n  return subscription;\n}"]},"metadata":{},"sourceType":"module"}