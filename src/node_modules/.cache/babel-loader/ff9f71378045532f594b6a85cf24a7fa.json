{"ast":null,"code":"var _jsxFileName = \"/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\"; // stripe\n\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js'; // Util imports\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField'; // Custom Components\n\nimport CardInput from './Cardinput';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n    margin: '35vh auto'\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'flex-start'\n  },\n  div: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignContent: 'flex-start',\n    justifyContent: 'space-between'\n  },\n  button: {\n    margin: '2em auto 1em'\n  }\n});\nexport default function HomePage() {\n  _s();\n\n  const classes = useStyles(); // State\n\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const res = await axios.post('http://localhost:3000/pay', {\n      email: email\n    });\n    const clientSecret = res.data['client_secret'];\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: email\n        }\n      }\n    }); //   // The payment has been processed!\n    //   if (result.paymentIntent.status === 'succeeded') {\n    // toast.success(\"PAID\")\n    // } else {\n    //   toast(\"Something went wrong\", { type: \"error\" });\n    // }\n    //   }\n\n    async function checkStatus() {\n      const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n\n      if (!clientSecret) {\n        return;\n      }\n\n      const {\n        paymentIntent\n      } = await stripe.retrievePaymentIntent(clientSecret);\n\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          showMessage(\"Payment succeeded!\");\n          break;\n\n        case \"processing\":\n          showMessage(\"Your payment is processing.\");\n          break;\n\n        case \"requires_payment_method\":\n          showMessage(\"Your payment was not successful, please try again.\");\n          break;\n\n        default:\n          showMessage(\"Something went wrong.\");\n          break;\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            id: \"outlined-email-input\",\n            helperText: `Email you'll recive updates and receipts on`,\n            margin: \"normal\",\n            variant: \"outlined\",\n            type: \"email\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(CardInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.div,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              onClick: handleSubmit,\n              children: \"Pay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this);\n  };\n}\n\n_s(HomePage, \"+1QP9gyRLhPcy9WS6AY1xzDMBKo=\", false, function () {\n  return [useStyles, useStripe, useElements];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Checkout.js"],"names":["React","useState","axios","ToastContainer","toast","useStripe","useElements","CardElement","Button","Card","CardContent","TextField","CardInput","makeStyles","useStyles","root","maxWidth","margin","content","display","flexDirection","alignContent","div","justifyContent","button","HomePage","classes","email","setEmail","stripe","elements","handleSubmit","event","res","post","clientSecret","data","result","confirmCardPayment","payment_method","card","getElement","billing_details","checkStatus","URLSearchParams","window","location","search","get","paymentIntent","retrievePaymentIntent","status","showMessage","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n// stripe\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\n// Util imports\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\n// Custom Components\nimport CardInput from './Cardinput';\nimport {makeStyles} from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles({\n\troot: {\n\t  maxWidth: 500,\n\t  margin: '35vh auto',\n\t},\n\tcontent: {\n\t  display: 'flex',\n\t  flexDirection: 'column',\n\t  alignContent: 'flex-start',\n\t},\n\tdiv: {\n\t  display: 'flex',\n\t  flexDirection: 'row',\n\t  alignContent: 'flex-start',\n\t  justifyContent: 'space-between',\n\t},\n\tbutton: {\n\t  margin: '2em auto 1em',\n\t  \n\t},\n\t\n\t\t\n\t\t\n\t\n\t\n  });\n\nexport default function HomePage() {\n\tconst classes = useStyles()\n  // State\n  const [email, setEmail] = useState('');\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n   \n\tif (!stripe || !elements) {\n   \n      return;\n    }\n\n    const res = await axios.post('http://localhost:3000/pay', {email: email});\n\n    const clientSecret = res.data['client_secret'];\n\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          email: email,\n        },\n      },\n    });\n\n  \n    //   // The payment has been processed!\n    //   if (result.paymentIntent.status === 'succeeded') {\n\t\t// toast.success(\"PAID\")\n    // } else {\n    //   toast(\"Something went wrong\", { type: \"error\" });\n    // }\n    //   }\n    \n\n\n    async function checkStatus() {\n      const clientSecret = new URLSearchParams(window.location.search).get(\n        \"payment_intent_client_secret\"\n      );\n    \n      if (!clientSecret) {\n        return;\n      }\n    \n      const { paymentIntent } = await stripe.retrievePaymentIntent(clientSecret);\n    \n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          showMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          showMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          showMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          showMessage(\"Something went wrong.\");\n          break;\n      }\n    }\n  \n  \n  return (\n   <div>\n   <ToastContainer /> \n   <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        <TextField\n          label='Email'\n          id='outlined-email-input'\n          helperText={`Email you'll recive updates and receipts on`}\n          margin='normal'\n          variant='outlined'\n          type='email'\n          required\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          fullWidth\n        />\n        <CardInput />\n        <div className={classes.div}>\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmit}>\n            Pay\n          </Button>\n\t\t  \n        </div>\n      </CardContent>\n    </Card>\n</div>\n\n  );\n\n  }}"]},"metadata":{},"sourceType":"module"}