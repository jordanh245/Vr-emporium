{"ast":null,"code":"import React from'react';import{TotalH1,TotalButtonDiv,TotalButton}from\"../styled-components/TotalStyle\";import{useSelector}from'react-redux';import{Elements}from'@stripe/react-stripe-js';import{loadStripe}from'@stripe/stripe-js';// Styles\nimport Checkout from\"../components/Checkout\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var stripePromise=loadStripe('pk_test_51Jvn4JK9lSkN4Pbd01nuPW8nWnecj1PE9h2uApHKviNEpL3c1K9fDezkOC3KidOucoa5ROS0JosmfEOGjmKSQi9y00xZqQGwlB');export default function Total(){var cart=useSelector(function(state){return state.Cart;});var total=0;var formatter=new Intl.NumberFormat('en-US',{style:'currency',currency:\"USD\"});for(var subtotal in cart){total+=cart[subtotal].price*cart[subtotal].quantity;}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(TotalH1,{children:[\"Total: \",formatter.format(total)]}),/*#__PURE__*/_jsx(Elements,{stripe:stripePromise,children:/*#__PURE__*/_jsx(Checkout,{})})]});}","map":{"version":3,"sources":["/Users/jordanharris/Desktop/Vr-emporium/vr-project/src/components/Total.js"],"names":["React","TotalH1","TotalButtonDiv","TotalButton","useSelector","Elements","loadStripe","Checkout","stripePromise","Total","cart","state","Cart","total","formatter","Intl","NumberFormat","style","currency","subtotal","price","quantity","format"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,cAAlB,CAAkCC,WAAlC,KAAoD,iCAApD,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAAQC,QAAR,KAAuB,yBAAvB,CACA,OAAQC,UAAR,KAAyB,mBAAzB,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAGF,UAAU,CAAC,6GAAD,CAAhC,CAIA,cAAe,SAASG,CAAAA,KAAT,EAAiB,CAC/B,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EAAD,CAAxB,CACA,GAAIC,CAAAA,KAAK,CAAC,CAAV,CACA,GAAIC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,OAAtB,CAA+B,CAC9CC,KAAK,CAAE,UADuC,CAE9CC,QAAQ,CAAE,KAFoC,CAA/B,CAAhB,CAKA,IAAK,GAAMC,CAAAA,QAAX,GAAuBT,CAAAA,IAAvB,CAA6B,CAC5BG,KAAK,EAAIH,IAAI,CAACS,QAAD,CAAJ,CAAeC,KAAf,CAAuBV,IAAI,CAACS,QAAD,CAAJ,CAAeE,QAA/C,CACA,CACD,mBAGC,oCAGC,MAAC,OAAD,sBAAiBP,SAAS,CAACQ,MAAV,CAAiBT,KAAjB,CAAjB,GAHD,cAOA,KAAC,QAAD,EAAU,MAAM,CAAEL,aAAlB,uBACI,KAAC,QAAD,IADJ,EAPA,GAHD,CAgBA","sourcesContent":["import React from 'react'\nimport { TotalH1, TotalButtonDiv, TotalButton} from \"../styled-components/TotalStyle\"\nimport { useSelector } from 'react-redux';\n\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n// Styles\nimport Checkout from \"../components/Checkout\"\n\nconst stripePromise = loadStripe('pk_test_51Jvn4JK9lSkN4Pbd01nuPW8nWnecj1PE9h2uApHKviNEpL3c1K9fDezkOC3KidOucoa5ROS0JosmfEOGjmKSQi9y00xZqQGwlB');\n\n\n\nexport default function Total() {\n\tconst cart = useSelector((state) => state.Cart);\n\tlet total=0;\n\tlet formatter = new Intl.NumberFormat('en-US', {\n\t\tstyle: 'currency',\n\t\tcurrency: \"USD\"\n\t});\n\n\tfor (const subtotal in cart) {\n\t\ttotal += cart[subtotal].price * cart[subtotal].quantity\n\t}\n\treturn (\n\t\t\n\t\t\n\t\t<div>\n\n\n\t\t\t<TotalH1>Total: {formatter.format(total)}</TotalH1>\n\t\n\t\t\n\t\t\n\t\t<Elements stripe={stripePromise}>\n      <Checkout />\n    </Elements>\n\t\t\n\t\t</div>\n\t)\n}\n\n\n"]},"metadata":{},"sourceType":"module"}