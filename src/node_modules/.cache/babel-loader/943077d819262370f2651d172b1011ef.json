{"ast":null,"code":"var _jsxFileName = \"/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = inputs;\n\n  const onChange = e => {\n    setInputs({ ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitForm = async e => {\n    e.perventDefault();\n\n    try {\n      const body = {\n        email,\n        password\n      };\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const parseResponse = await response.json();\n\n      if (parseResponse.token) {\n        localStorage.setItem('token', parseResponse.token);\n        setIsAuthenticated(dispatch, true);\n        setInputs({\n          email: '',\n          password: ''\n        });\n        setUserInfo(dispatch);\n        toast.success('Logged in successfully');\n      } else {\n        setIsAuthenticated(dispatch, false);\n        toast.error(parseResponse);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }; // const [loginInfo, setLoginInfo] = useState({})\n  // const handleChange = (e) => {\n  // \tsetLoginInfo({\n  // \t\t...loginInfo,\n  // \t\t[e.target.name]: [e.target.value]\n  // \t})\n  // }\n  // const handleLogin = () => {\n  // \tfetch(\"http://localhost:3000/login\", {\n  // \t\tmethod: \"POST\",\n  // \t\theaders: {\"Content-type\": \"application/json\"},\n  // \t\tbody: JSON.stringify(loginInfo)\n  // \t}).then(response => response.json())\n  // \t.then(result => {\n  // \t\tconsole.log(result)\n  // \t})\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: handleChange,\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      onChange: handleChange,\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Login, \"+vMduhvi0/Wek0EtiUJzeCQHNhE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Login.js"],"names":["React","useState","toast","useSelector","useDispatch","Login","dispatch","inputs","setInputs","email","password","onChange","e","target","name","value","onSubmitForm","perventDefault","body","response","fetch","method","headers","JSON","stringify","parseResponse","json","token","localStorage","setItem","setIsAuthenticated","setUserInfo","success","error","err","console","handleChange","handleLogin"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AAChB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACpCQ,IAAAA,KAAK,EAAC,EAD8B;AAEpCC,IAAAA,QAAQ,EAAC;AAF2B,GAAD,CAApC;AAKC,QAAM;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBH,MAA1B;;AAED,QAAMI,QAAQ,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,SAAS,CAAC,EACT,GAAGD,MADM;AAET,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAgBF,CAAC,CAACC,MAAF,CAASE;AAFhB,KAAD,CAAT;AAIA,GALD;;AAQA,QAAMC,YAAY,GAAG,MAAOJ,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAG;AACF,YAAMC,IAAI,GAAG;AAAET,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAb;AACA,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAC3B,6BAD2B,EAE3B;AACCC,QAAAA,MAAM,EAAE,MADT;AAECC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFV;AAGCJ,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHP,OAF2B,CAA5B;AASA,YAAMO,aAAa,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA5B;;AACA,UAAID,aAAa,CAACE,KAAlB,EAAyB;AACxBC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,aAAa,CAACE,KAA5C;AAEAG,QAAAA,kBAAkB,CAACxB,QAAD,EAAW,IAAX,CAAlB;AACAE,QAAAA,SAAS,CAAC;AACTC,UAAAA,KAAK,EAAE,EADE;AAETC,UAAAA,QAAQ,EAAE;AAFD,SAAD,CAAT;AAIAqB,QAAAA,WAAW,CAACzB,QAAD,CAAX;AACAJ,QAAAA,KAAK,CAAC8B,OAAN,CAAc,wBAAd;AAEA,OAXD,MAWO;AACNF,QAAAA,kBAAkB,CAACxB,QAAD,EAAW,KAAX,CAAlB;AACAJ,QAAAA,KAAK,CAAC+B,KAAN,CAAYR,aAAZ;AACA;AACD,KA3BD,CA2BE,OAAOS,GAAP,EAAY;AACbC,MAAAA,OAAO,CAACF,KAAR,CAAcC,GAAd;AACA;AACD,GAhCD,CAlBgB,CAyDhB;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAEA,sBACC;AAAA,4BAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAiC,MAAA,QAAQ,EAAEE,YAA3C;AAAyD,MAAA,WAAW,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,QAAQ,EAAEA,YAA7C;AAA2D,MAAA,WAAW,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GAzFQhC,K;UACSD,W;;;KADTC,K;AA2FT,eAAeA,KAAf","sourcesContent":["\nimport React, { useState } from 'react'\nimport { toast } from 'react-toastify';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nfunction Login() {\n\tconst dispatch = useDispatch()\n\t\n\tconst [inputs, setInputs] = useState({\n\t\temail:\"\",\n\t\tpassword:\"\",\n\n\t})\n\t const {email, password} = inputs;\n\t\n\tconst onChange = (e) => {\n\t\tsetInputs({\n\t\t\t...inputs,\n\t\t\t[e.target.name]:e.target.value\n\t\t});\n\t};\n\t\n\n\tconst onSubmitForm = async (e) => {\n\t\te.perventDefault();\n\t\ttry{\n\t\t\tconst body = { email, password };\n\t\t\tconst response = await fetch(\n\t\t\t\t'http://localhost:3000/login',\n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\tbody: JSON.stringify(body),\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst parseResponse = await response.json();\n\t\t\tif (parseResponse.token) {\n\t\t\t\tlocalStorage.setItem('token', parseResponse.token);\n\n\t\t\t\tsetIsAuthenticated(dispatch, true);\n\t\t\t\tsetInputs({\n\t\t\t\t\temail: '',\n\t\t\t\t\tpassword: '',\n\t\t\t\t});\n\t\t\t\tsetUserInfo(dispatch);\n\t\t\t\ttoast.success('Logged in successfully');\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tsetIsAuthenticated(dispatch, false);\n\t\t\t\ttoast.error(parseResponse);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\t\t\n\t\n\t\n\t\n\t\n\t\n\t// const [loginInfo, setLoginInfo] = useState({})\n\t\n\n\t// const handleChange = (e) => {\n\t// \tsetLoginInfo({\n\t// \t\t...loginInfo,\n\t// \t\t[e.target.name]: [e.target.value]\n\t// \t})\n\t// }\n\n\t// const handleLogin = () => {\n\t// \tfetch(\"http://localhost:3000/login\", {\n\t// \t\tmethod: \"POST\",\n\t// \t\theaders: {\"Content-type\": \"application/json\"},\n\t// \t\tbody: JSON.stringify(loginInfo)\n\t// \t}).then(response => response.json())\n\t// \t.then(result => {\n\t// \t\tconsole.log(result)\n\t// \t})\n\n\t\n\t// }\n\t\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t\t<input type=\"text\" name=\"email\"  onChange={handleChange} placeholder=\"email\" />\n\t\t\t<input type=\"text\" name=\"password\" onChange={handleChange} placeholder=\"password\" />\n\t\t\t<button onClick={handleLogin}>SUBMIT</button>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}