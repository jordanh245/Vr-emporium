{"ast":null,"code":"var _jsxFileName = \"/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const history = useHistory(); //   CHANGE HANDLE TO THIS\n  // const handleChange = (e) => {\n  // \tsetLoginInfo ({\n  // \t\t...loginInfo,\n  // \t\t[e.target.name]: e.target.value\n  // \t})\n  // }\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const login = await fetch('http://localhost:3000/login', {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(loginInfo)\n    }).then(response => response.json()).then(result => {\n      // console.log(result)\n      if (result.success === true) {\n        const token = result.token;\n        localStorage.setItem(\"jsonwebtoken\", token); // history.push(\"/user\")\n      }\n    });\n    window.location.reload(false);\n  }; // const  handleAccount = () => {\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"email\",\n      onChange: e => setLoginInfo({ ...loginInfo,\n        [e.target.name]: e.target.value\n      }),\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"password\",\n      onChange: e => setLoginInfo({ ...loginInfo,\n        [e.target.name]: e.target.value\n      }),\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleLogin(e),\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n} // onChange={handleChange}\n// onClick={handleLogin}\n\n_s(Login, \"0g6f4LGzvNW7b8agq8GHKEtdFi8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Login.js"],"names":["React","useState","connect","useHistory","Login","loginInfo","setLoginInfo","email","password","history","handleLogin","e","preventDefault","login","fetch","method","mode","headers","body","JSON","stringify","then","response","json","result","success","token","localStorage","setItem","window","location","reload","target","name","value"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAGA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAE/B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC;AAC1CM,IAAAA,KAAK,EAAC,EADoC;AAE1CC,IAAAA,QAAQ,EAAC;AAFiC,GAAD,CAA1C;AAMA,QAAMC,OAAO,GAAGN,UAAU,EAA1B,CAR+B,CAShC;AACC;AACA;AACA;AACA;AACA;AACA;;AAGA,QAAMO,WAAW,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACxDC,MAAAA,MAAM,EAAE,MADgD;AAExDC,MAAAA,IAAI,EAAE,MAFkD;AAGxDC,MAAAA,OAAO,EAAE;AACR,wBAAe;AADP,OAH+C;AAOxDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAef,SAAf;AAPkD,KAAhC,CAAL,CAQhBgB,IARgB,CAQXC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARD,EASnBF,IATmB,CASbG,MAAD,IAAY;AACjB;AACA,UAAIA,MAAM,CAACC,OAAP,KAAmB,IAAvB,EAA6B;AAC5B,cAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,KAArC,EAF4B,CAG5B;AACA;AACD,KAhBmB,CAApB;AAiBDG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACC,GApBD,CAlB+B,CAyChC;AAEA;;;AAGC,sBACC;AAAA,4BAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,WAAW,EAAC,OAAhC;AACS,MAAA,QAAQ,EAAGpB,CAAD,IAAOL,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,SAACM,CAAC,CAACqB,MAAF,CAASC,IAAV,GAAgBtB,CAAC,CAACqB,MAAF,CAASE;AAAxC,OAAD,CADtC;AACwF,MAAA,IAAI,EAAC;AAD7F;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAoB,MAAA,WAAW,EAAC,UAAhC;AACS,MAAA,QAAQ,EAAGvB,CAAD,IAAOL,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,SAACM,CAAC,CAACqB,MAAF,CAASC,IAAV,GAAgBtB,CAAC,CAACqB,MAAF,CAASE;AAAxC,OAAD,CADtC;AACwF,MAAA,IAAI,EAAC;AAD7F;AAAA;AAAA;AAAA;AAAA,YAJD,eAMC;AAAQ,MAAA,OAAO,EAAGvB,CAAD,IAAKD,WAAW,CAACC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWC,C,CAIF;AACA;;GA9DwBP,K;UAQPD,U;;;KAROC,K","sourcesContent":["\n\nimport React, { useState } from 'react'\nimport {connect } from \"react-redux\"\nimport {useHistory} from \"react-router-dom\"\n\n\nexport default function Login() {\n\t\n\tconst [loginInfo, setLoginInfo] = useState({\n\t\temail:\"\",\n\t\tpassword:\"\",\n\n\t})\n\n\tconst history = useHistory()\n//   CHANGE HANDLE TO THIS\n\t// const handleChange = (e) => {\n\t// \tsetLoginInfo ({\n\t// \t\t...loginInfo,\n\t// \t\t[e.target.name]: e.target.value\n\t// \t})\n\t// }\n\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault();\n\t\tconst login = await fetch('http://localhost:3000/login', {\n\t\t\tmethod: \"POST\",\n\t\t\tmode: \"cors\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\":\"application/json\",\n\t\t\t\t\n\t\t\t},\n\t\t\tbody: JSON.stringify(loginInfo)\n\t\t}) .then(response => response.json())\n\t\t.then((result) => {\n\t\t\t// console.log(result)\n\t\t\tif (result.success === true) {\n\t\t\t\tconst token = result.token\n\t\t\t\tlocalStorage.setItem(\"jsonwebtoken\", token);\n\t\t\t\t// history.push(\"/user\")\n\t\t\t}\n\t\t})\n\twindow.location.reload(false);\n\t};\n\n\n// const  handleAccount = () => {\n\n// }\n\n\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t\t<input type=\"text\"  placeholder=\"email\" \n            onChange={(e) => setLoginInfo({...loginInfo, [e.target.name]:e.target.value})} name=\"email\"/>\n\t\t\t<input type=\"text\"  placeholder=\"password\" \n            onChange={(e) => setLoginInfo({...loginInfo, [e.target.name]:e.target.value})} name=\"password\"/>\n\t\t\t<button onClick={(e)=>handleLogin(e)}>SUBMIT</button>\n\t\t\t\n\t\t</div>\n\t)\n\t}\n\n\n\t\n// onChange={handleChange}\n// onClick={handleLogin}"]},"metadata":{},"sourceType":"module"}