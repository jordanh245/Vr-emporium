{"ast":null,"code":"import _slicedToArray from\"/Users/jordanharris/Desktop/Vr-emporium/vr-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import React, {useState} from 'react';\n// import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\n// import \"react-toastify/dist/ReactToastify.css\";\n// // stripe\n// import {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\n// // Util imports\n// import Button from '@material-ui/core/Button';\n// import Card from '@material-ui/core/Card';\n// import CardContent from '@material-ui/core/CardContent';\n// import TextField from '@material-ui/core/TextField';\n// // Custom Components\n// import CardInput from './Cardinput';\n// import {makeStyles} from '@material-ui/core/styles';\n// const useStyles = makeStyles({\n// \troot: {\n// \t  maxWidth: 500,\n// \t  margin: '35vh auto',\n// \t},\n// \tcontent: {\n// \t  display: 'flex',\n// \t  flexDirection: 'column',\n// \t  alignContent: 'flex-start',\n// \t},\n// \tdiv: {\n// \t  display: 'flex',\n// \t  flexDirection: 'row',\n// \t  alignContent: 'flex-start',\n// \t  justifyContent: 'space-between',\n// \t},\n// \tbutton: {\n// \t  margin: '2em auto 1em',\n// \t},\n//   });\n// export default function HomePage() {\n// \tconst classes = useStyles()\n//   // State\n//   const [email, setEmail] = useState('');\n//   const stripe = useStripe();\n//   const elements = useElements();\n//   const handleSubmit = async (event) => {\n// \tif (!stripe || !elements) {\n//       return;\n//     }\n//     const res = await axios.post('http://localhost:3000/pay', {email: email});\n//     const clientSecret = res.data['client_secret'];\n//     const result = await stripe.confirmCardPayment(clientSecret, {\n//       payment_method: {\n//         card: elements.getElement(CardElement),\n//         billing_details: {\n//           email: email,\n//         },\n//       },\n//     });\n//       // The payment has been processed!\n//       if (result.paymentIntent.status === 'succeeded') {\n// \t\ttoast.success(\"PAID\")\n//     } else {\n//       toast(\"Something went wrong\", { type: \"error\" });\n//     }\n//       }\n//   return (\n//    <div>\n//    <ToastContainer /> \n//    <Card className={classes.root}>\n//       <CardContent className={classes.content}>\n//         <TextField\n//           label='Email'\n//           id='outlined-email-input'\n//           helperText={`Email you'll recive updates and receipts on`}\n//           margin='normal'\n//           variant='outlined'\n//           type='email'\n//           required\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           fullWidth\n//         />\n//         <CardInput />\n//         <div className={classes.div}>\n//           <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmit}>\n//             Pay\n//           </Button>\n//         </div>\n//       </CardContent>\n//     </Card>\n// </div>\n//   );\n//   }\nimport React,{useState,useEffect}from\"react\";import{useHistory}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";var ProductDisplay=function ProductDisplay(){return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"form\",{action:\"http://localhost:3000/create-checkout-session\",method:\"POST\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Checkout\"})})});};var Message=function Message(_ref){var message=_ref.message;return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"p\",{children:message})});};export default function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var history=useHistory();useEffect(function(){// Check to see if this is a redirect back from Checkout\nvar query=new URLSearchParams(window.location.search);if(query.get(\"success\")){setMessage(\"Order placed! You will receive an email confirmation.\");history.push(\"/home\");}if(query.get(\"canceled\")){setMessage(\"Order canceled -- continue to shop around and checkout when you're ready.\");}},[]);return message?/*#__PURE__*/_jsx(Message,{message:message}):/*#__PURE__*/_jsx(ProductDisplay,{});}","map":{"version":3,"sources":["/Users/jordanharris/Desktop/Vr-emporium/vr-project/src/components/Checkout.js"],"names":["React","useState","useEffect","useHistory","ProductDisplay","Message","message","App","setMessage","history","query","URLSearchParams","window","location","search","get","push"],"mappings":"yKAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAKA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,UAAT,KAA2B,cAA3B,C,2CAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,sBACrB,sCAEE,aAAM,MAAM,CAAC,+CAAb,CAA6D,MAAM,CAAC,MAApE,uBACE,eAAQ,IAAI,CAAC,QAAb,sBADF,EAFF,EADqB,EAAvB,CAWA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,UAAGC,CAAAA,OAAH,MAAGA,OAAH,oBACd,sCACE,mBAAIA,OAAJ,EADF,EADc,EAAhB,CAMA,cAAe,SAASC,CAAAA,GAAT,EAAe,CAC5B,cAA8BN,QAAQ,CAAC,EAAD,CAAtC,wCAAOK,OAAP,eAAgBE,UAAhB,eACA,GAAMC,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CACAD,SAAS,CAAC,UAAM,CACd;AACA,GAAMQ,CAAAA,KAAK,CAAG,GAAIC,CAAAA,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAd,CAEA,GAAIJ,KAAK,CAACK,GAAN,CAAU,SAAV,CAAJ,CAA0B,CACxBP,UAAU,CAAC,uDAAD,CAAV,CACAC,OAAO,CAACO,IAAR,CAAa,OAAb,EACD,CAED,GAAIN,KAAK,CAACK,GAAN,CAAU,UAAV,CAAJ,CAA2B,CACzBP,UAAU,CACR,2EADQ,CAAV,CAGD,CACF,CAdQ,CAcN,EAdM,CAAT,CAgBA,MAAOF,CAAAA,OAAO,cACZ,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EADY,cAGZ,KAAC,cAAD,IAHF,CAKD","sourcesContent":["// import React, {useState} from 'react';\n// import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\n// import \"react-toastify/dist/ReactToastify.css\";\n// // stripe\n// import {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\n// // Util imports\n// import Button from '@material-ui/core/Button';\n// import Card from '@material-ui/core/Card';\n// import CardContent from '@material-ui/core/CardContent';\n// import TextField from '@material-ui/core/TextField';\n// // Custom Components\n// import CardInput from './Cardinput';\n// import {makeStyles} from '@material-ui/core/styles';\n\n\n\n// const useStyles = makeStyles({\n// \troot: {\n// \t  maxWidth: 500,\n// \t  margin: '35vh auto',\n// \t},\n// \tcontent: {\n// \t  display: 'flex',\n// \t  flexDirection: 'column',\n// \t  alignContent: 'flex-start',\n// \t},\n// \tdiv: {\n// \t  display: 'flex',\n// \t  flexDirection: 'row',\n// \t  alignContent: 'flex-start',\n// \t  justifyContent: 'space-between',\n// \t},\n// \tbutton: {\n// \t  margin: '2em auto 1em',\n\t  \n// \t},\n\t\n\t\t\n\t\t\n\t\n\t\n//   });\n\n// export default function HomePage() {\n// \tconst classes = useStyles()\n//   // State\n//   const [email, setEmail] = useState('');\n\n//   const stripe = useStripe();\n//   const elements = useElements();\n\n//   const handleSubmit = async (event) => {\n   \n// \tif (!stripe || !elements) {\n   \n//       return;\n//     }\n\n//     const res = await axios.post('http://localhost:3000/pay', {email: email});\n\n//     const clientSecret = res.data['client_secret'];\n\n//     const result = await stripe.confirmCardPayment(clientSecret, {\n//       payment_method: {\n//         card: elements.getElement(CardElement),\n//         billing_details: {\n//           email: email,\n//         },\n        \n\n//       },\n//     });\n\n  \n//       // The payment has been processed!\n//       if (result.paymentIntent.status === 'succeeded') {\n// \t\ttoast.success(\"PAID\")\n//     } else {\n//       toast(\"Something went wrong\", { type: \"error\" });\n//     }\n//       }\n    \n  \n  \n//   return (\n//    <div>\n//    <ToastContainer /> \n//    <Card className={classes.root}>\n//       <CardContent className={classes.content}>\n//         <TextField\n//           label='Email'\n//           id='outlined-email-input'\n//           helperText={`Email you'll recive updates and receipts on`}\n//           margin='normal'\n//           variant='outlined'\n//           type='email'\n//           required\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           fullWidth\n//         />\n//         <CardInput />\n//         <div className={classes.div}>\n//           <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleSubmit}>\n//             Pay\n//           </Button>\n\t\t  \n//         </div>\n//       </CardContent>\n//     </Card>\n// </div>\n\n//   );\n\n//   }\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\n\nconst ProductDisplay = () => (\n  <section>\n\n    <form action=\"http://localhost:3000/create-checkout-session\" method=\"POST\">\n      <button type=\"submit\">\n        Checkout\n      </button>\n    </form>\n  </section>\n);\n\nconst Message = ({ message }) => (\n  <section>\n    <p>{message}</p>\n  </section>\n);\n\nexport default function App() {\n  const [message, setMessage] = useState(\"\");\n  const history = useHistory();\n  useEffect(() => {\n    // Check to see if this is a redirect back from Checkout\n    const query = new URLSearchParams(window.location.search);\n\n    if (query.get(\"success\")) {\n      setMessage(\"Order placed! You will receive an email confirmation.\");\n      history.push(\"/home\");\n    }\n\n    if (query.get(\"canceled\")) {\n      setMessage(\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\n      );\n    }\n  }, []);\n\n  return message ? (\n    <Message message={message} />\n  ) : (\n    <ProductDisplay />\n  );\n}"]},"metadata":{},"sourceType":"module"}