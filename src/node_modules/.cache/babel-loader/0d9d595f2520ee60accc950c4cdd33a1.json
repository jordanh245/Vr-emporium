{"ast":null,"code":"var _jsxFileName = \"/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { response } from 'express';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [information, setInformation] = useState({\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: ''\n  });\n  const {\n    firstname,\n    lastname,\n    email,\n    password\n  } = information;\n\n  const onChange = e => {\n    setInformation({ ...information,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        firstname,\n        lastname,\n        email,\n        password\n      };\n      const response = await fetch('http://localhost:3001/register', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      }); // const parseRes = await response.json()\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"firstname\",\n        name: \"firstname\",\n        value: firstname,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"lastname\",\n        name: \"lastname\",\n        value: lastname,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: e => onChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Register, \"nfW6cZ2YinakuzBtqZi1yy11/C4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Register;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/jordanharris/Desktop/DigitalCrafts-Aug/Week13/SoloProject/vr-project/src/components/Register.js"],"names":["response","React","useState","useEffect","useSelector","useDispatch","Register","dispatch","information","setInformation","firstname","lastname","email","password","onChange","e","target","name","value","onSubmitForm","preventDefault","body","fetch","method","headers","JSON","stringify","err","console","error","message"],"mappings":"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","sourcesContent":["import { response } from 'express';\nimport React, {useState, useEffect} from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nexport default function Register() {\n\tconst dispatch = useDispatch()\n\n\nconst [information, setInformation] = useState({\n\tfirstname: '',\n\tlastname: '',\n\temail: '',\n\tpassword: '',\n});\n\nconst {\n\tfirstname,\n\tlastname,\n\temail,\n\tpassword\n} = information;\n\nconst onChange = (e) => {\n\tsetInformation({\n\t\t...information,\n\t\t[e.target.name]: e.target.value\n\t});\n};\n\nconst onSubmitForm = async (e) => {\n\te.preventDefault();\n\ttry{\n\t\tconst body = {\n\t\t\tfirstname,\n\t\t\tlastname,\n\t\t\temail,\n\t\t\tpassword\n\t\t};\n\n\t\tconst response = await fetch('http://localhost:3001/register',\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body)\n\t\t\n\t\t\n\t\t}\n\t\t);\n// const parseRes = await response.json()\n\t} catch (err) {\n\t\tconsole.error(err.message);\n\t}\n\t\n};\n\t\n\t\n\t\n\t\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={onSubmitForm}>\n\t\t<input type=\"text\" placeholder=\"firstname\" name=\"firstname\"value={firstname}  onChange={(e)=> onChange(e)}/>\n\t\t<input type=\"text\" placeholder=\"lastname\" name=\"lastname\" value={lastname} onChange={(e)=> onChange(e)}/>\n\t\t<input type=\"email\" placeholder=\"email\" name=\"email\" value={email}  onChange={(e)=> onChange(e)}/>\n\t\t<input type=\"password\" placeholder=\"password\"  name=\"password\" value={password}  onChange={(e)=> onChange(e)} />\n\t\t<button >SUBMIT</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n\n};\n\n"]},"metadata":{},"sourceType":"module"}